[unix_http_server]
file=/tmp/supervisor.sock   ; path to your socket file

; [inet_http_server]          ; HTTP 服务器，提供 web 管理界面
; port=127.0.0.1:9001         ; Web 管理后台运行的 IP 和端口，如果开放到公网，需要注意安全性

[supervisord]
logfile=/tmp/supervisord.log ; supervisord log file
logfile_maxbytes=50MB       ; maximum size of logfile before rotation
logfile_backups=10          ; number of backed up logfiles
loglevel=info               ; info, debug, warn, trace
pidfile=/var/run/supervisord.pid ; pidfile location
nodaemon=true               ; run supervisord as a daemon
minfds=1024                 ; number of startup file descriptors
minprocs=200                ; number of process descriptors

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:app]
command=/bin/sh -c 'gunicorn  manager:app --error-logfile - -b 0.0.0.0:${SERVER_PORT:-8888} -t ${GUNICORN_TIMEOUT:-30}'
autostart=true
autorestart=true
directory=./
;启动的等待时候,我想是为了重启能杀掉原来进程预留的时间
startsecs=10
;进程发送停止信号等待os返回SIGCHILD的时间
stopwaitsecs=10
;以下2句是为了保证杀掉进程和其子进程而不会只杀死其控制的程序主进程而留下子进程变为孤立进程的问题
stopsignal=QUIT
stopasgroup=true
;日志输出级别 导出所有日志到stdout
Loglevel=info
redirect_stderr=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0

[group:app]
programs=app

; [program:heartbeat]
; command=heartbeat
; autorestart=true
; Loglevel=info
; redirect_stderr=true
; stdout_logfile=/dev/stdout
; stdout_logfile_maxbytes=0
